workflow:
  # Only run if source is an open merge request
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

stages:
  - build-single
  - build-double

# Runner with HPC/SLURM connection
.pnnl_tags_template:
  image: kfox1111/slurm:deception2
  tags:
    - k8s
    - ikp
    - eagles
    - marianas
    - deception

# Basic Ubuntu image for Cleanup/Linting
.pnnl_nonhpc_tags:
  image: ubuntu:20.04
  tags:
    - k8s
    - ikp
    - eagles
    - basic

variables:
  GIT_SUBMODULE_STRATEGY: recursive

# Generic job for building HAERO/mam4xx
.pnnl_hpc_job_template:
  extends:
    - .pnnl_tags_template
    - .pnnl_script_template
    - .pnnl_after_script_template
  parallel:
    matrix:
      - BUILD_TYPE: [Debug, Release]
  variables:
    GIT_STRATEGY: clone
    HAERO_INSTALL: /qfs/projects/eagles/pnnl-ci/haero_${{ BUILD_TYPE }}_${{ PRECISION }}"


.pnnl_after_script_template:
  after_script:
    - export WORKDIR=$HOME/gitlab/${CI_PIPELINE_ID}/${WORKDIR_SUFFIX}/
      # Iterate over possible jobid named files (jobid_%J)
    - job_ids="$WORKDIR/jobid_*"
    - |
      for job in $job_ids
      do
        if [[ -f "$job" ]]; then
          jobid=$(cat "$job")
          scancel $jobid
        fi
      done
    - rm -rf $WORKDIR

.pnnl_script_template:
  script:
    - |
      set -xv
      #  NOTES:  WORKDIR is on constance/deception/newell
      #          ./      is only on the Kubernetes instance
      #          Comments in multi line YAML are buggy,
      #          So make sure to indent at same level

      export WORKDIR="$HOME/gitlab/${CI_PIPELINE_ID}/${WORKDIR_SUFFIX}"
      mkdir -p $WORKDIR
      cp -r . $WORKDIR
      cd $WORKDIR

      # Unique output file for this stage
      output="output"
      echo -n > $output
      tail -f $output &
      tailpid=$!

      # Some variables need to be exported to propogate to scripts
      export HAERO_INSTALL=$HAERO_INSTALL 
      export BUILD_TYPE=$BUILD_TYPE
      export PRECISION=$PRECISION

      # jobid used in pnnl_after_script_template to cancel job if cancelled or
      # timed out by gitlab through the UI
      # We use a template script name so that each pipeline stage can re-use same script configuration
      jobid=$(sbatch --export=ALL -A EAGLES --gres=gpu:1 --ntasks=3 -p $SLURM_Q -o $output -e $output -t 1:00:00 $WORKDIR/.github/pnnl-ci/$SCRIPT_NAME)
      export jobid=$(echo $jobid | cut -f4 -d' ')
      # Unique jobid filename for this job
      echo $jobid > "$WORKDIR/jobid_${jobid}"
      res=1
     
      while :;
      do
        if [[ "$(awk 'BEGIN{i=0}/BUILD_STATUS/{i++}END{print i}' $output)" != "0" ]]; then
          kill $tailpid
          echo 'Last tail of build $output:'
          tail -n 200 $output
          res=$(grep BUILD_STATUS $output | tail -n 1 | cut -f2 -d':')
          break
        fi
        sleep 10
      done

      echo "Finished batch job with exit code: $res"
      rm "$WORKDIR/jobid_${jobid}"
      exit $res

SVC Account Cleanup:
  stage: .pre
  variables:
    # Don't clone for cleanup jobs
    GIT_STRATEGY: none
  extends:
    - .pnnl_tags_template
  script:
    - export WORKDIR="$HOME/gitlab/"
    # clears directory of files more than 6 hours/360 minutes old
    - find $WORKDIR -type d -mindepth 1 -mmin +360 -prune -print -exec rm -rf {} \; || true
    - ls -hal $WORKDIR

Deception Single Precision:
  stage: build
  variables:
    SLURM_Q: "dl_shared"
    WORKDIR_SUFFIX: mam4xx_${BUILD_TYPE}_${PRECISION}
    SCRIPT_NAME: ci.sh
    PRECISION: single
  extends:
    - .pnnl_hpc_job_template

Deception Double Precision:
  stage: build
  variables:
    SLURM_Q: "dl_shared"
    WORKDIR_SUFFIX: mam4xx_${BUILD_TYPE}_${PRECISION}
    SCRIPT_NAME: ci.sh
    PRECISION: double
  extends:
    - .pnnl_hpc_job_template

Rebuild HAERO Single Precision:
  stage: .pre
  when: manual
  variables:
    SLURM_Q: "dl_shared"
    WORKDIR_SUFFIX: haero_${BUILD_TYPE}_${PRECISION}
    SCRIPT_NAME: rebuild-haero.sh
    PRECISION: single
  extends:
    - .pnnl_hpc_job_template
# ---
